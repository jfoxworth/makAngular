import { OnInit, OnDestroy, AfterViewInit, ElementRef, EventEmitter, Renderer2 } from '@angular/core';
import { DrakeStoreService } from '../services/drake-store.service';
/**
 * Makes the container droppable and children draggable.
 *
 * @export
 */
import * as ɵngcc0 from '@angular/core';
export declare class DroppableDirective implements OnInit, OnDestroy, AfterViewInit {
    private el;
    private renderer;
    private drakesService;
    model: any;
    copy: boolean;
    removeOnSpill: boolean;
    ngxDroppable: string;
    direction: 'vertical' | 'horizontal' | 'mixed';
    drop: EventEmitter<any>;
    drag: EventEmitter<any>;
    over: EventEmitter<any>;
    out: EventEmitter<any>;
    remove: EventEmitter<any>;
    cancel: EventEmitter<any>;
    readonly container: any;
    dropZone: string;
    defaultZone: string;
    _dropZone: string;
    constructor(el: ElementRef, renderer: Renderer2, drakesService: DrakeStoreService);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DroppableDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<DroppableDirective, "[ngxDroppable]", never, {
    "copy": "copy";
    "removeOnSpill": "removeOnSpill";
    "direction": "direction";
    "dropZone": "dropZone";
    "model": "model";
    "ngxDroppable": "ngxDroppable";
}, {
    "drop": "drop";
    "drag": "drag";
    "over": "over";
    "out": "out";
    "remove": "remove";
    "cancel": "cancel";
}, never>;
}

//# sourceMappingURL=ngx-droppable.directive.d.ts.map